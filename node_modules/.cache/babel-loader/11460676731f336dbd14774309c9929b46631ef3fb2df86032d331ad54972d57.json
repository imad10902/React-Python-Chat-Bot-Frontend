{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Flask Chat bot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    message: \"Hello I am health bot\",\n    sender: \"Health Bot\"\n  }]);\n  //message below is event object\n  const handleSend = async message => {\n    const newMessage = {\n      message: message,\n      sender: \"user\",\n      direction: 'outgoing'\n    };\n\n    //update the messages array to display latest message\n    //using below method because we cant update the state messages array using setMessages directly on message object\n    const newMessages = [...messages, newMessage];\n    setMessages(newMessages);\n\n    //send the message object to backend so that bot can respond\n  };\n\n  //Initiallly the messages array will have this initial message \n  //Each message is an object having two elements\n  //then we render this array in MessagesList ui component to show the messages we have in the array\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            children: messages.map((message, i) => {\n              return /*#__PURE__*/_jsxDEV(Message, {\n                model: message\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 22\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            placeholder: \"Ask me something\",\n            onSend: handleSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yHn1DxfEIHwUMzvlcM3DCweaN0s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","App","_s","messages","setMessages","message","sender","handleSend","newMessage","direction","newMessages","className","children","style","position","map","i","model","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onSend","_c","$RefreshReg$"],"sources":["C:/React Flask Chat bot/frontend/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\n\nfunction App() {\nconst [messages, setMessages]=useState([\n  {\n    message: \"Hello I am health bot\",\n    sender:\"Health Bot\"\n  }\n]);\n//message below is event object\nconst handleSend=async(message)=>{\n  const newMessage={\n    message: message,\n    sender: \"user\",\n    direction: 'outgoing'\n  }\n\n//update the messages array to display latest message\n//using below method because we cant update the state messages array using setMessages directly on message object\nconst newMessages= [...messages, newMessage]\nsetMessages(newMessages)\n\n//send the message object to backend so that bot can respond\n\n}\n\n//Initiallly the messages array will have this initial message \n//Each message is an object having two elements\n//then we render this array in MessagesList ui component to show the messages we have in the array\n  return (\n    <div className=\"App\">\n     <div style={{position:\"relative\",}}>\n      <MainContainer>\n        <ChatContainer>\n          <MessageList>\n            {messages.map((message, i)=>{\n              return <Message key={i} model={message}/>\n            })}\n          </MessageList>\n          <MessageInput  placeholder='Ask me something' onSend={handleSend}/>\n        </ChatContainer>\n      </MainContainer>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,WAAW;AAClB,OAAO,2DAA2D;AAClE,SAASC,aAAa,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,YAAY,EAAEC,eAAe,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjI,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAACZ,QAAQ,CAAC,CACrC;IACEa,OAAO,EAAE,uBAAuB;IAChCC,MAAM,EAAC;EACT,CAAC,CACF,CAAC;EACF;EACA,MAAMC,UAAU,GAAC,MAAMF,OAAO,IAAG;IAC/B,MAAMG,UAAU,GAAC;MACfH,OAAO,EAAEA,OAAO;MAChBC,MAAM,EAAE,MAAM;MACdG,SAAS,EAAE;IACb,CAAC;;IAEH;IACA;IACA,MAAMC,WAAW,GAAE,CAAC,GAAGP,QAAQ,EAAEK,UAAU,CAAC;IAC5CJ,WAAW,CAACM,WAAW,CAAC;;IAExB;EAEA,CAAC;;EAED;EACA;EACA;EACE,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eACnBZ,OAAA;MAAKa,KAAK,EAAE;QAACC,QAAQ,EAAC;MAAW,CAAE;MAAAF,QAAA,eAClCZ,OAAA,CAACP,aAAa;QAAAmB,QAAA,eACZZ,OAAA,CAACN,aAAa;UAAAkB,QAAA,gBACZZ,OAAA,CAACL,WAAW;YAAAiB,QAAA,EACTT,QAAQ,CAACY,GAAG,CAAC,CAACV,OAAO,EAAEW,CAAC,KAAG;cAC1B,oBAAOhB,OAAA,CAACJ,OAAO;gBAASqB,KAAK,EAAEZ;cAAQ,GAAlBW,CAAC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAkB,CAAC;YAC3C,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC,eACdrB,OAAA,CAACH,YAAY;YAAEyB,WAAW,EAAC,kBAAkB;YAACC,MAAM,EAAEhB;UAAW;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CA3CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}